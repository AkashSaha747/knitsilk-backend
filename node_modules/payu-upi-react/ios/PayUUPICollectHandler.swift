//
//  PayUUPICollectHandler.swift
//  payu-tpv
//
//  Created by Rajvinder Singh on 25/07/21.
//

import UIKit
import PayUParamsKit
import PayUUPICoreKit

class PayUUPICollectHandler: NSObject {
    var handler = PayUUPIHybridCollectHandler()
    private let activityIndicator = PayUActivityIndicator()
    
    func initiatePayment(paramDict: NSDictionary,
                         errorCallback: @escaping RCTResponseSenderBlock) {
        
        DispatchQueue.main.async { [weak self] in
            guard let rootVC = RCTPresentedViewController() else {
                PayUUPICore.shared.paymentCompletion?(.failure(.unknownError()))
                return
            }
            let validateParam = self?.handler.validatePaymentParam(paramDict: paramDict)
            if let paymentParam = validateParam?.param {
                self?.activityIndicator.startOn(rootVC.view)
                PayUAPI.getDataForUPICollectPayment(withPaymentParams: paymentParam) { result in
                    self?.activityIndicator.stop()
                    self?.handler.handlePureS2SResult(result, forApi: .initiateUpiCollectS2s, fromVC: rootVC)
                }
            } else {
                errorCallback([validateParam?.error ?? [:]])
            }
        }
    }
}
