package com.payuUpi

import com.facebook.react.bridge.Callback
import com.payu.paymentparamhelper.PayuErrors
import com.payu.upisdk.callbacks.PayUUPICallback
import com.payu.upisdk.upi.IValidityCheck
import com.payu.upisdk.util.UpiConstant

class PayuUpiCallbackHandler(var errorCallback: Callback, var successCallback: Callback) :
  PayUUPICallback() {
  /**
   * React native Callback supports only one time call
   * since, onPaymentTerminate will be called always(in every case after success/failure/cancel callback)
   * from native code hence this check is placed
   */
  private var isCallBackSent = false
  override fun onPaymentFailure(payuResult: String?, merchantResponse: String?) {
    super.onPaymentFailure(payuResult, merchantResponse)
      errorCallback(payuResult)
      isCallBackSent = true
  }

  override fun onPaymentSuccess(payuResult: String?, merchantResponse: String?) {
    super.onPaymentSuccess(payuResult, merchantResponse)
      successCallback(payuResult)
      isCallBackSent = true
  }

  override fun onUpiErrorReceived(code: Int, errormsg: String?) {
    super.onUpiErrorReceived(code, errormsg)
      errorCallback(errormsg)
      isCallBackSent = true
  }

  override fun onPaymentTerminate() {
    super.onPaymentTerminate()
    if (!isCallBackSent) {
      errorCallback(UpiConstant.ON_PAYMENT_TERMINATE)
      isCallBackSent = true
    }
  }


}
