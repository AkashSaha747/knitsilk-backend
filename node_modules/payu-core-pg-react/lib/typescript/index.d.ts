declare type PayUSdkSuccessBlock = (data: any) => void;
declare type PayUSdkErrorBlock = (data: any) => void;
declare class PayUSdk {
    constructor();
    makePayment(params: any, successBlock: PayUSdkSuccessBlock, errorBlock: PayUSdkErrorBlock): void;
    createPaymentRequest(params: any): Promise<any>;
    fetchPaymentOptions(params: any): Promise<any>;
    vas(params: any): Promise<any>;
    checkIsDomestic(params: any): Promise<any>;
    getBinInfo(params: any): Promise<any>;
    getConfig(params: any): Promise<any>;
    checkBalance(params: any): Promise<any>;
    eligibleBinsForEmi(params: any): Promise<any>;
    deleteTokenisedCard(params: any): Promise<any>;
    getTokenisedCard(params: any): Promise<any>;
    getTokenisedCardDetails(params: any): Promise<any>;
    getIbiboCodes(params: any): Promise<any>;
    fetchIFSCDetails(params: any): Promise<any>;
    fetchOfferDetails(params: any): Promise<any>;
    validateOfferDetails(params: any): Promise<any>;
    fetchAdsInformation(params: any): Promise<any>;
    saveEventImpression(params: any): Promise<any>;
    getTransactionInfo(params: any): Promise<any>;
    getEMIDetails(params: any): Promise<any>;
    getCheckoutDetails(params: any): Promise<any>;
    verifyPayment(params: any): Promise<any>;
    getOfferStatus(params: any): Promise<any>;
    checkOfferDetails(params: any): Promise<any>;
    getUserCards(params: any): Promise<any>;
    saveUserCard(params: any): Promise<any>;
    editUserCard(params: any): Promise<any>;
    deleteStoredCard(params: any): Promise<any>;
    lookupAPI(params: any): Promise<any>;
}
declare const _default: PayUSdk;
export default _default;
