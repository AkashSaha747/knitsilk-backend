function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
import { Platform } from 'react-native';
class responseParser {
  constructor() {
    _defineProperty(this, "platform", Platform.OS);
    _defineProperty(this, "responseData", void 0);
  }
  SetRequestData(data) {
    this.responseData = data;
  }
  GetRequestData() {
    return this.responseData;
  }
  ParsePaymentOptions(response) {
    // if(this.platform === 'android'){

    //   return Object.keys(response)

    // }

    return response;
  }
  ParseVAS(response) {
    return this.DeleteStatusResponse(response);
  }
  ParseEmiDetails(response) {
    return this.DeleteStatusResponse(response);
  }
  ParseChecoIsDomastic(response) {
    return this.DeleteStatusResponse(response);
  }
  ParseBinInfo(response) {
    return this.DeleteStatusResponse(response);
  }
  ParseGetConfig(response) {
    return this.DeleteStatusResponse(response);
  }
  ParseCheckBalance(response) {
    return this.DeleteStatusResponse(response);
  }
  ParseEligibleBinsForEmi(response) {
    return this.DeleteStatusResponse(response);
  }
  ParseDeleteTokenisedUserCard(response) {
    return this.DeleteStatusResponse(response);
  }
  ParseGetTokenisedCard(response) {
    return this.DeleteStatusResponse(response);
  }
  ParseGetTokenisedCardDetails(response) {
    return this.DeleteStatusResponse(response);
  }
  ParseTransectionInfo(response) {
    return this.DeleteStatusResponse(response);
  }
  DeleteStatusResponse(response) {
    if (this.platform === 'android') {
      delete response.responseStatus;
    }
    return response;
  }
}
export default new responseParser();
//# sourceMappingURL=response.js.map